// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int              @id @default(autoincrement())
  email            String           @unique()
  password         String
  nickname         String           @unique()
  profile          Profile?
  article_requests ArticleRequest[]
  updated_at       DateTime?        @default(now())
  created_at       DateTime
  moderator        Moderator[]

  @@map("users")
}

model Profile {
  id          Int       @id @default(autoincrement())
  description String?
  user_id     Int       @unique()
  user        User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  updated_at  DateTime? @default(now())
  created_at  DateTime

  @@map("profiles")
}

model Article {
  id               Int              @id @default(autoincrement())
  title            String
  content          String?          @default("No content")
  moderators       Moderator[]
  article_requests ArticleRequest[]
  updated_at       DateTime?        @default(now())
  created_at       DateTime

  @@map("articles")
}

model ArticleRequest {
  id         Int       @id @default(autoincrement())
  title      String
  content    String?   @default("No content")
  article    Article   @relation(fields: [article_id], references: [id], onDelete: Cascade)
  user       User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  article_id Int
  user_id    Int
  updated_at DateTime? @default(now())
  created_at DateTime

  @@map("article_requests")
}

model Moderator {
  id         Int       @id @default(autoincrement())
  title      String
  content    String?   @default("No content")
  article    Article   @relation(fields: [article_id], references: [id], onDelete: Cascade)
  user       User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  article_id Int
  user_id    Int
  updated_at DateTime? @default(now())
  created_at DateTime

  @@map("moderators")
}
